{"version":3,"file":"ej2-angular-kanban.js","sources":["~/@syncfusion/ej2-angular-kanban/src/kanban/columns.directive.ts","~/@syncfusion/ej2-angular-kanban/src/kanban/stackedheaders.directive.ts","~/@syncfusion/ej2-angular-kanban/src/kanban/kanban.component.ts","~/@syncfusion/ej2-angular-kanban/src/kanban/kanban.module.ts","~/@syncfusion/ej2-angular-kanban/src/kanban/kanban-all.module.ts","~/@syncfusion/ej2-angular-kanban/ej2-angular-kanban.ts"],"names":["input","outputs","__decorate","__metadata"],"mappings":"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","sourcesContent":["import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['allowDrag', 'allowDrop', 'allowToggle', 'headerText', 'isExpanded', 'keyField', 'maxCount', 'minCount', 'showAddButton', 'showItemCount', 'template', 'transitionColumns'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-columns` directive represent a columns of the Kanban board. \n * It must be contained in a Kanban component(`ejs-kanban`). \n * ```html\n * <ejs-kanban>\n *   <e-columns>\n *    <e-column keyField='Open' textField='To Do'></e-column>\n *    <e-column keyField='Close' textField='Completed'></e-column>\n *   </e-columns>\n * </ejs-kanban>\n * ```\n */\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\npublic directivePropList: any;\n/**\n * Enable or disable column drag\n * \\@default true\n */\npublic allowDrag: any;\n/**\n * Enable or disable column drop\n * \\@default true\n */\npublic allowDrop: any;\n/**\n * Enable or disable toggle column\n * \\@default false\n */\npublic allowToggle: any;\n/**\n * Defines the column header title\n * \\@default null\n */\npublic headerText: any;\n/**\n * Defines the collapsed or expandable state\n * \\@default true\n */\npublic isExpanded: any;\n/**\n * Defines the column keyField. It supports both number and string type. \n * String type supports the multiple column keys and number type does not support the multiple column keys.\n * \\@default null\n */\npublic keyField: any;\n/**\n * Defines the maximum card count in column\n * \\@default null\n * \\@asptype int\n */\npublic maxCount: any;\n/**\n * Defines the minimum card count in column\n * \\@default null\n * \\@asptype int\n */\npublic minCount: any;\n/**\n * Enable or disable cell add button\n * \\@default false\n */\npublic showAddButton: any;\n/**\n * Enable or disable card count in column\n * \\@default true\n */\npublic showItemCount: any;\n/**\n * Defines the column transition\n * \\@default []\n */\npublic transitionColumns: any;\n/**\n * Defines the column template\n * \\@default null\n */\n@Template()\n    public template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: ['template', ] },],\n};\n}\n\nfunction ColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnDirective.ctorParameters;\n/** @type {?} */\nColumnDirective.propDecorators;\n/** @type {?} */\nColumnDirective.prototype.directivePropList;\n/**\n * Enable or disable column drag\n * \\@default true\n * @type {?}\n */\nColumnDirective.prototype.allowDrag;\n/**\n * Enable or disable column drop\n * \\@default true\n * @type {?}\n */\nColumnDirective.prototype.allowDrop;\n/**\n * Enable or disable toggle column\n * \\@default false\n * @type {?}\n */\nColumnDirective.prototype.allowToggle;\n/**\n * Defines the column header title\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.headerText;\n/**\n * Defines the collapsed or expandable state\n * \\@default true\n * @type {?}\n */\nColumnDirective.prototype.isExpanded;\n/**\n * Defines the column keyField. It supports both number and string type. \n * String type supports the multiple column keys and number type does not support the multiple column keys.\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.keyField;\n/**\n * Defines the maximum card count in column\n * \\@default null\n * \\@asptype int\n * @type {?}\n */\nColumnDirective.prototype.maxCount;\n/**\n * Defines the minimum card count in column\n * \\@default null\n * \\@asptype int\n * @type {?}\n */\nColumnDirective.prototype.minCount;\n/**\n * Enable or disable cell add button\n * \\@default false\n * @type {?}\n */\nColumnDirective.prototype.showAddButton;\n/**\n * Enable or disable card count in column\n * \\@default true\n * @type {?}\n */\nColumnDirective.prototype.showItemCount;\n/**\n * Defines the column transition\n * \\@default []\n * @type {?}\n */\nColumnDirective.prototype.transitionColumns;\n/**\n * Defines the column template\n * \\@default null\n * @type {?}\n */\nColumnDirective.prototype.template;\n/** @type {?} */\nColumnDirective.prototype.viewContainerRef;\n}\n\n/**\n * Column Array Directive\n */\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\nconstructor() {\n        super('columns');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-kanban>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['keyFields', 'text'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * `e-stackedHeaders` directive represent a stacked header of the Kanban board. \n * It must be contained in a Kanban component(`ejs-kanban`). \n * ```html\n * <ejs-kanban>\n *   <e-stackedHeaders>\n *    <e-stackedHeader keyField='Open' text='To Do'></e-stackedHeader>\n *    <e-stackedHeader keyField='Close' text='Completed'></e-stackedHeader>\n *   </e-stackedHeaders>\n * </ejs-kanban>\n * ```\n */\nexport class StackedHeaderDirective extends ComplexBase<StackedHeaderDirective> {\npublic directivePropList: any;\n/**\n * Defines the multiple columns keyField\n * \\@default null\n */\npublic keyFields: any;\n/**\n * Defines the column header text\n * \\@default null\n */\npublic text: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stackedHeaders>e-stackedHeader',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StackedHeaderDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStackedHeaderDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackedHeaderDirective.ctorParameters;\n/** @type {?} */\nStackedHeaderDirective.prototype.directivePropList;\n/**\n * Defines the multiple columns keyField\n * \\@default null\n * @type {?}\n */\nStackedHeaderDirective.prototype.keyFields;\n/**\n * Defines the column header text\n * \\@default null\n * @type {?}\n */\nStackedHeaderDirective.prototype.text;\n/** @type {?} */\nStackedHeaderDirective.prototype.viewContainerRef;\n}\n\n/**\n * StackedHeader Array Directive\n */\nexport class StackedHeadersDirective extends ArrayBase<StackedHeadersDirective> {\nconstructor() {\n        super('stackedheaders');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-kanban>e-stackedHeaders',\n    queries: {\n        children: new ContentChildren(StackedHeaderDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StackedHeadersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStackedHeadersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackedHeadersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Kanban } from '@syncfusion/ej2-kanban';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { ColumnsDirective } from './columns.directive';\nimport { StackedHeadersDirective } from './stackedheaders.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowDragAndDrop','allowKeyboard','cardSettings','columns','constraintType','cssClass','dataSource','dialogSettings','enablePersistence','enableRtl','enableTooltip','externalDropId','height','keyField','locale','query','showEmptyColumn','sortSettings','stackedHeaders','swimlaneSettings','tooltipTemplate','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','actionComplete','actionFailure','cardClick','cardDoubleClick','cardRendered','created','dataBinding','dataBound','dataSourceChanged','dataStateChange','dialogClose','dialogOpen','drag','dragStart','dragStop','queryCellInfo'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * `ej-kanban` represents the Angular Kanban Component.\n * ```html\n * <ejs-kanban></ejs-kanban>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class KanbanComponent extends Kanban implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\n\tactionBegin: any;\n\tactionComplete: any;\n\tactionFailure: any;\n\tcardClick: any;\n\tcardDoubleClick: any;\n\tcardRendered: any;\n\tcreated: any;\n\tdataBinding: any;\n\tdataBound: any;\n\tdataSourceChanged: any;\n\tdataStateChange: any;\n\tdialogClose: any;\n\tdialogOpen: any;\n\tdrag: any;\n\tdragStart: any;\n\tdragStop: any;\npublic queryCellInfo: any;\npublic childColumns: QueryList<ColumnsDirective>;\npublic childStackedHeaders: QueryList<StackedHeadersDirective>;\npublic tags: string[] = ['columns', 'stackedHeaders'];\n/**\n * Defines the template content to card’s tooltip. The property works by enabling the ‘enableTooltip’ property.\n * \\@default null\n */\n@Template()\n    public tooltipTemplate: any;\n    \n    @Template()\npublic columns_template: any;\n    \n    @Template()\npublic swimlaneSettings_template: any;\n    \n    @Template()\npublic cardSettings_template: any;\n    \n    @Template()\npublic dialogSettings_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childColumns;\n        if (this.childStackedHeaders) {\n                    this.tagObjects[1].instance = /** @type {?} */(( this.childStackedHeaders as any));\n                }\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-kanban',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childColumns: new ContentChild(ColumnsDirective), \n        childStackedHeaders: new ContentChild(StackedHeadersDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltipTemplate': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n'columns_template': [{ type: ContentChild, args: ['columnsTemplate', ] },],\n'swimlaneSettings_template': [{ type: ContentChild, args: ['swimlaneSettingsTemplate', ] },],\n'cardSettings_template': [{ type: ContentChild, args: ['cardSettingsTemplate', ] },],\n'dialogSettings_template': [{ type: ContentChild, args: ['dialogSettingsTemplate', ] },],\n};\n}\n\nfunction KanbanComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nKanbanComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nKanbanComponent.ctorParameters;\n/** @type {?} */\nKanbanComponent.propDecorators;\n/** @type {?} */\nKanbanComponent.prototype.context;\n/** @type {?} */\nKanbanComponent.prototype.tagObjects;\n/** @type {?} */\nKanbanComponent.prototype.actionBegin;\n/** @type {?} */\nKanbanComponent.prototype.actionComplete;\n/** @type {?} */\nKanbanComponent.prototype.actionFailure;\n/** @type {?} */\nKanbanComponent.prototype.cardClick;\n/** @type {?} */\nKanbanComponent.prototype.cardDoubleClick;\n/** @type {?} */\nKanbanComponent.prototype.cardRendered;\n/** @type {?} */\nKanbanComponent.prototype.created;\n/** @type {?} */\nKanbanComponent.prototype.dataBinding;\n/** @type {?} */\nKanbanComponent.prototype.dataBound;\n/** @type {?} */\nKanbanComponent.prototype.dataSourceChanged;\n/** @type {?} */\nKanbanComponent.prototype.dataStateChange;\n/** @type {?} */\nKanbanComponent.prototype.dialogClose;\n/** @type {?} */\nKanbanComponent.prototype.dialogOpen;\n/** @type {?} */\nKanbanComponent.prototype.drag;\n/** @type {?} */\nKanbanComponent.prototype.dragStart;\n/** @type {?} */\nKanbanComponent.prototype.dragStop;\n/** @type {?} */\nKanbanComponent.prototype.queryCellInfo;\n/** @type {?} */\nKanbanComponent.prototype.childColumns;\n/** @type {?} */\nKanbanComponent.prototype.childStackedHeaders;\n/** @type {?} */\nKanbanComponent.prototype.tags;\n/**\n * Defines the template content to card’s tooltip. The property works by enabling the ‘enableTooltip’ property.\n * \\@default null\n * @type {?}\n */\nKanbanComponent.prototype.tooltipTemplate;\n/** @type {?} */\nKanbanComponent.prototype.columns_template;\n/** @type {?} */\nKanbanComponent.prototype.swimlaneSettings_template;\n/** @type {?} */\nKanbanComponent.prototype.cardSettings_template;\n/** @type {?} */\nKanbanComponent.prototype.dialogSettings_template;\n/** @type {?} */\nKanbanComponent.prototype.registerEvents;\n/** @type {?} */\nKanbanComponent.prototype.addTwoWay;\n/** @type {?} */\nKanbanComponent.prototype.ngEle;\n/** @type {?} */\nKanbanComponent.prototype.srenderer;\n/** @type {?} */\nKanbanComponent.prototype.viewContainerRef;\n/** @type {?} */\nKanbanComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { StackedHeaderDirective, StackedHeadersDirective } from './stackedheaders.directive';\nimport { KanbanComponent } from './kanban.component';\n/**\n * NgModule definition for the Kanban component.\n */\nexport class KanbanModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        KanbanComponent,\n        ColumnDirective,\n        ColumnsDirective,\n        StackedHeaderDirective,\n        StackedHeadersDirective\n    ],\n    exports: [\n        KanbanComponent,\n        ColumnDirective,\n        ColumnsDirective,\n        StackedHeaderDirective,\n        StackedHeadersDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction KanbanModule_tsickle_Closure_declarations() {\n/** @type {?} */\nKanbanModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nKanbanModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { StackedHeaderDirective, StackedHeadersDirective } from './stackedheaders.directive';\nimport { KanbanComponent } from './kanban.component';\nimport { KanbanModule } from './kanban.module';\n/**\n * NgModule definition for the Kanban component with providers.\n */\nexport class KanbanAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, KanbanModule],\n    exports: [\n        KanbanModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction KanbanAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nKanbanAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nKanbanAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ColumnDirective,ColumnsDirective,StackedHeaderDirective,StackedHeadersDirective,KanbanComponent,KanbanModule,KanbanAllModule,Kanban,KanbanModel,actionBegin,actionComplete,actionFailure,cardClick,cardDoubleClick,cardRendered,queryCellInfo,dataBinding,dataBound,dragStart,drag,dragStop,documentClick,dialogOpen,dialogClose,contentReady,dataReady,bottomSpace,cardSpace,toggleWidth,dataSourceChanged,dataStateChange,ActionEventArgs,CardClickEventArgs,QueryCellInfoEventArgs,CardRenderedEventArgs,DragEventArgs,DialogEventArgs,DialogCloseEventArgs,SaveChanges,EJ2Instance,DragArgs,HeaderArgs,DragEdges,ScrollPosition,ScrollOffset,SortComparerFunction,DataStateChangeEventArgs,PendingState,DataSourceChangedEventArgs,ReturnType,CurrentAction,SelectionType,SortDirection,SortOrderBy,ConstraintType,DialogFieldType,CardSettingsModel,ColumnsModel,SwimlaneSettingsModel,StackedHeadersModel,DialogSettingsModel,DialogFieldsModel,SortSettingsModel} from './public_api';\n\nexport {inputs as ɵa,outputs as ɵb} from './src/kanban/kanban.component';"]}