{"version":3,"file":"kanban.component.d.ts","sources":["kanban.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, QueryList, Renderer2, Injector } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { Kanban } from '@syncfusion/ej2-kanban';\nimport { ColumnsDirective } from './columns.directive';\nimport { StackedHeadersDirective } from './stackedheaders.directive';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n * `ej-kanban` represents the Angular Kanban Component.\n * ```html\n * <ejs-kanban></ejs-kanban>\n * ```\n */\nexport declare class KanbanComponent extends Kanban implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    context: any;\n    tagObjects: any;\n    actionBegin: any;\n    actionComplete: any;\n    actionFailure: any;\n    cardClick: any;\n    cardDoubleClick: any;\n    cardRendered: any;\n    created: any;\n    dataBinding: any;\n    dataBound: any;\n    dataSourceChanged: any;\n    dataStateChange: any;\n    dialogClose: any;\n    dialogOpen: any;\n    drag: any;\n    dragStart: any;\n    dragStop: any;\n    queryCellInfo: any;\n    childColumns: QueryList<ColumnsDirective>;\n    childStackedHeaders: QueryList<StackedHeadersDirective>;\n    tags: string[];\n    /**\n     * Defines the template content to card’s tooltip. The property works by enabling the ‘enableTooltip’ property.\n     * @default null\n     */\n    tooltipTemplate: any;\n    columns_template: any;\n    swimlaneSettings_template: any;\n    cardSettings_template: any;\n    dialogSettings_template: any;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}